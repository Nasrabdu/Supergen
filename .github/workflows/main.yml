name: VPS + Telegram Bot (Tailscale)

on:
  workflow_dispatch: {}   # ÿ™ÿ¥ÿ∫ŸäŸÑ ŸäÿØŸàŸä ŸÖŸÜ ÿ™ÿ®ŸàŸäÿ® Actions

jobs:
  secure-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360   # ÿ≠ŸàÿßŸÑŸä 6 ÿ≥ÿßÿπÿßÿ™

    steps:
      - name: Install & Configure SSH
        run: |
          sudo apt update -y
          sudo apt install -y openssh-server
          sudo systemctl enable ssh
          sudo systemctl start ssh
          echo "root:admin@123" | sudo chpasswd
          echo "PermitRootLogin yes" | sudo tee -a /etc/ssh/sshd_config
          sudo service ssh restart
          echo "‚úÖ SSH user: root | pass: admin@123"

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          # ŸÑŸà ÿπŸÜÿØŸÉ ÿ≥ŸÉÿ±ÿ™ TAILSCALE_AUTH_KEY ÿ≥ŸäŸèÿ≥ÿ™ÿÆÿØŸÖÿõ ÿ∫Ÿäÿ± ÿ∞ŸÑŸÉ ÿ≥Ÿäÿπÿ±ÿ∂ ÿ±ÿßÿ®ÿ∑ ŸÖŸàÿßŸÅŸÇÿ© ŸäÿØŸàŸä.
          if [ -n "${{ secrets.TAILSCALE_AUTH_KEY }}" ]; then
            sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=vps --accept-routes
          else
            sudo tailscale up --hostname=vps --accept-routes
          fi
          tsIP=$(tailscale ip -4 | head -n 1)
          echo "TAILSCALE_IP=$tsIP" >> $GITHUB_ENV
          echo "‚úÖ Tailscale IP: $tsIP"

      - name: Checkout bot code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install telethon==1.34.0 requests>=2.31.0
          fi

      - name: Prepare secrets
        run: |
          # ŸÜŸÉÿ™ÿ® ÿßŸÑÿ≥ŸÉÿ±ÿ™ÿ≥ ÿ•ŸÑŸâ ŸÖŸÑŸÅÿßÿ™ ŸÖÿ≠ŸÑŸäÿ© ŸäŸÇÿ±ÿ£Ÿáÿß ÿ≥ŸÉÿ±ÿ®ÿ™ ÿßŸÑÿ®Ÿàÿ™
          printf '%s' '${{ secrets.SESSIONS_JSON }}'   > sessions.json
          printf '%s' '${{ secrets.ALLOWED_IDS_JSON }}' > allowed_ids.json

      - name: Run Telegram watcher
        env:
          TELEGRAM_API_ID:     ${{ secrets.API_ID }}
          TELEGRAM_API_HASH:   ${{ secrets.API_HASH }}
          TELEGRAM_BOT_TOKEN:  ${{ secrets.TELEGRAM_BOT_TOKEN }}
          SESS_FILE:           "sessions.json"
          ALLOWED_IDS_FILE:    "allowed_ids.json"
          DB_PATH:             "seen.db"
        run: |
          echo "üöÄ Starting Telegram Bot..."
          nohup python telegram_watcher.py > bot.log 2>&1 &
          sleep 5
          if ! pgrep -af telegram_watcher.py >/dev/null; then
            echo "‚ùå Bot didn't stay running. Last 200 log lines:"
            tail -n 200 bot.log || true
            exit 1
          fi
          echo "‚úÖ Bot is running."

      - name: Keep VPS Alive
        run: |
          while true; do
            echo "*** $(date) *** VPS running with bot..."
            sleep 300
          done
